@import './mixins';

.tooltip {
  --tooltip-distance: 0.25rem;
  --tooltip-delay: 0.25s;
  --tooltip-transition-duration: 0.25s;
  --tooltip-container-z-index: 1;
  --tooltip-content-z-index: -1;
  --tooltip-ratio-distance-when-has-arrow: 3;

  position: relative;
  cursor: pointer;
  height: max-content;

  .tooltip-agent {
    z-index: var(--tooltip-container-z-index);
    &:hover + .tooltip-content-on-hover {
      &.tooltip-content {
        transition: var(--tooltip-transition-duration) cubic-bezier(0.165, 0.84, 0.44, 1) var(--tooltip-delay),
          z-index var(--tooltip-transition-duration) ease-in
            calc(var(--tooltip-transition-duration) / 2 + var(--tooltip-delay));

        &-top,
        &-bottom {
          left: 50%;

          &.arrow-tooltip {
            &::before {
              left: 50%;
            }
          }
        }

        &-top {
          top: calc(0px - var(--tooltip-distance));
          @include show-tooltip();
          @include get-transform('up');
          @include get-arrow(
            'top',
            var(--tooltip-distance),
            var(--tooltip-ratio-distance-when-has-arrow),
            var(--arrow-color)
          );
        }

        &-bottom {
          bottom: calc(0px - var(--tooltip-distance));
          @include show-tooltip();
          @include get-transform('down');
          @include get-arrow(
            'bottom',
            var(--tooltip-distance),
            var(--tooltip-ratio-distance-when-has-arrow),
            var(--arrow-color)
          );
        }

        &-left,
        &-right {
          top: 50%;

          &.arrow-tooltip {
            &::before {
              top: 50%;
            }
          }
        }
        &-left {
          left: calc(0% - var(--tooltip-distance));
          @include show-tooltip();
          @include get-transform('left');
          @include get-arrow(
            'left',
            var(--tooltip-distance),
            var(--tooltip-ratio-distance-when-has-arrow),
            var(--arrow-color)
          );
        }

        &-right {
          right: calc(0% - var(--tooltip-distance));
          @include show-tooltip();
          @include get-transform('right');
          @include get-arrow(
            'right',
            var(--tooltip-distance),
            var(--tooltip-ratio-distance-when-has-arrow),
            var(--arrow-color)
          );
        }
      }
    }
  }

  &-content {
    position: absolute;
    border-radius: var(--primary-radius);
    @include hide-tooltip();
    font-size: 0.9rem;

    // tooltip's background color
    &-light {
      --arrow-color: var(--tooltip-light-color);
      background-color: var(--tooltip-light-color);
      color: inherit;
    }
    &-dark {
      --arrow-color: var(--tooltip-dark-color);
      background-color: var(--tooltip-dark-color);
      color: #fff;
    }
    &-gray {
      --arrow-color: var(--tooltip-gray-color);
      background-color: var(--tooltip-gray-color);
      color: inherit;
    }

    // trigger events
    &-on-click {
      &:hover {
        display: none;
      }
      &.open {
        display: block;
      }
    }

    &.arrow-tooltip {
      &::before {
        content: '';
        position: absolute;
        width: 0;
        height: 0;
        border-style: solid;
        border-width: calc(2 * var(--tooltip-distance));
        border-color: transparent;
      }
    }
  }
}

@include create-slide('up');
@include create-slide('down');
@include create-slide('left');
@include create-slide('right');
